/*------------------------------------------------------------------------------------------------------------------------------------------
@Description      This Class is used to access data from Country, State and District Object.
*                   It updates the JSON data field on Country Object.
*                   There is a method which is used to find combination of Countries, States and Districts with a Specific keyword and with specific length.
*                   There is a method that Counts the total number of state and districts and update it into country and state object.
*                   There is a method that serialize the data in Json Format.
*                   There is method that updates the data which is generated by JsonGenerator method.
* @author           Mohd Owais   <mohd.owais@fexle.com>
* @version          1.0
* @created          13/07/2022
*/
public with sharing class CountryStateDistrictDataManipulation{
    // Initilizing Global map
    static  Map<String,Map<String,List<String>>> globalmapWithCountryState= new Map<String,Map<String,List<String>>>();
/*--------------------------------------------------------------------------------------------------------------------------
* Created Date : 15/7/2022
* Author       : Mohd Owais
* Description  : This Coustructor is used for mapping the data  of country state and district.       
* Parameters   : No Parameters   
*/     
    public CountryStateDistrictDataManipulation(){
        List<Country__c> countryList=[SELECT Id,
        Name 
        FROM Country__c]; //Fetching Record of Country
        List<State__c> stateList=[SELECT Id,
        Name,
        Country_Name__r.Name
        FROM State__c];// Fetching record of state
        List<District__c> districtList=[SELECT Id,
        Name,State_Name__r.Name
        FROM District__c];//fetching record of District
        // Iterating Country State And District List And Mapping them 
        for(Country__c c: countryList ){
            globalMapWithCountryState.put(c.Name,new map<String,List<String>>());
            for(State__c s:stateList){
                if(s.Country_Name__r.Name==c.Name){
                    globalMapWithCountryState.get(c.Name).put(s.Name,new List<String>());
                    for(District__c d:districtList){
                        List<String> listdistrict=new list<String>();
                        if(d.State_Name__r.name==s.Name){
                            listdistrict.add(d.Name);
                            globalMapWithCountryState.get(c.Name).get(s.Name).addAll(listdistrict);
                    }   } 
                }
            }                
        } 
    }
 /*--------------------------------------------------------------------------------------------------------------------------
* Created Date : 15/7/2022
* Author       :  Mohd Owais
* Description  : This method is used to find combination of country state and district with a specific keyword and length.
*return Type   : void
* Parameters   : String,Integer  
*/      
    public  void FindingSpecificLengthAndValue(String str,Integer i){
        // Initilizing a map with Stores the value Filtered by given parameter.
        map<String,map<String,List<string>>> mapCountryWithStartingKeyword=new map<String,map<String,List<string>>>();
        map<String,List<String>>mapState;//Initilizing a map which holds the value of state and their district value
        List<String> districtList;//Initilizing a List which holds the values of districts
        // Iterating global map to fetch the values in global map
        if(globalmapWithCountryState.size()>0){
            for(String country:globalmapWithCountryState.keySet()){
                if(country.StartsWithIgnoreCase(Str)){
                    mapState=new map<String,List<String>>();
                    for(String state:globalmapWithCountryState.get(country).keyset()){
                        if(state.StartsWithIgnoreCase(Str)){
                            districtList=new list<String>();
                            for(String district:globalmapWithCountryState.get(country).get(State)){
                                if(district.StartsWithIgnoreCase(Str)&& district.length()>i){
                                    districtList.add(district);
                                }
                            }
                            mapState.put(state,districtList);
                        }
                    }
                    mapCountryWithStartingKeyword.put(country,mapState);
                }
            }
            system.debug('Map of Country State and District With Starting keyWord and specific length :' +  mapCountryWithStartingKeyword);
        }
        else{
            system.debug('Map is empty');
        }
    }
 /*--------------------------------------------------------------------------------------------------------------------------
 * Created Date  : 15/7/2022
 * Author        : Mohd Owais
 * Description   : This method is used to Count total number of state and districts and update them into data base using Database aggregate query.
 *return Type    : void
 * Parameters    : No Parameters   
*/     
    public  void rollUpDistrictAndStateOnCountry(){
        map<Id,State__c> mapStateDistrictUpdate=new map<Id,State__c>();// Map to hold state and District Record to update
        map<Id,Country__c> mapCountryDistrictUpdate=new map<Id,Country__c>();// Map to hold Country and District Record to update
        //Getting aggregrate result on district
        for(aggregateResult agr:[SELECT Count(ID)NumofDistrict,State_Name__c FROM District__c GROUP BY State_Name__c]){
            mapStateDistrictUpdate.put(String.valueof(agr.get('State_Name__c')),new State__c(
                Id=String.valueof(agr.get('State_Name__c')),Total_Number_Of_Districts__c=Integer.valueof(agr.get('NumofDistrict'))));
        }
        if(!mapStateDistrictUpdate.isEmpty()){
            update mapStateDistrictUpdate.Values(); // update state record
        }
        // get aggegrate result on state 
        for(aggregateResult agr1:[SELECT COUNT(Id)NumofState,Country_Name__c,SUM(Total_Number_Of_Districts__c)NumofDistricts FROM State__c
            GROUP BY Country_Name__c]){
                mapCountryDistrictUpdate.put(String.valueof(agr1.get('Country_Name__c')),new Country__c(
                Id=String.valueof(agr1.get('Country_Name__c')),Total_Number_Of_Districts__c=Integer.valueof(agr1.get('NumofDistricts')),
                Total_Number_Of_States__c=Integer.valueof(agr1.get('NumofState'))));
        }
        if(!mapCountryDistrictUpdate.isEmpty()){           
            update mapCountryDistrictUpdate.Values(); // updating country record
        }
    }
/*--------------------------------------------------------------------------------------------------------------------------
 * Created Date : 15/7/2022
 * Author       : Mohd Owais
 * Description  : This method is used for updating Country Field which stores Json data.
 *return Type   : void
 * Parameters   : String 
*/     
    public void updateCountryJson(String countryName){ 
        Country__c con =[SELECT Name,
        Country_JSON_Data__c
        FROM Country__c
        WHERE Name =:countryName];// fetching the record from data base
        con.Country_JSON_Data__c=CountryJosnGenerator(con.Name);
        update con;// updating record of country
    }
/*--------------------------------------------------------------------------------------------------------------------------
 * Created Date : 15/7/2022
 * Author       : Mohd Owais
 * Description  : This method is used for  Generating json data of country state and district object using serialize function.
 *return Type   : String
 * Parameters   : String 
*/        
    public String CountryJosnGenerator(String countryName){
        country__c conData=[SELECT Id,
        Country_code__c,
        Total_Number_Of_Districts__c,
        Total_Number_Of_States__c
        FROM Country__c
        WHERE Name=:countryName]; //fetching country data from database
        Country con = new Country();
        con.countryName = countryName;
        con.countryCode=conData.Country_code__c;
        con.totalState=(Integer)conData.Total_Number_Of_States__c;
        con.totalDistrict=(Integer)conData.Total_Number_Of_Districts__c;
        // Creating list of state
        List<States> listStates = new List<States>();
        // Iterating global map to store data in country instance
        for(String sName : globalMapWithCountryState.get(countryName).keySet()){
            States st = new States();
            st.stateName = sName;
            List<Districts> dst = new List<Districts>();//Initilizing a list of district
            for(String dName : globalMapWithCountryState.get(countryName).get(sName)){
                Districts d = new Districts();
                d.districtName = dName;
                dst.add(d);
            }
            st.discricts = dst;
            listStates.add(st);
        }        
        con.states = listStates;
        return JSON.serialize(con);// returning all data in json format
    }
/*--------------------------------------------------------------------------------------------------------------------------
 * Created Date : 15/7/2022
 * Author       : Mohd Owais
 * Description  : Wrapper class for Country
*/    
    public class country{
        public string countryName{get;set;}
        public String countryCode{get;set;}
        public Integer totalState{get;set;}
        public Integer totalDistrict{get;set;}
        public List<States> states{get;set;}
    }
/*--------------------------------------------------------------------------------------------------------------------------
 * Created Date : 15/7/2022
 * Author       : Mohd Owais
 * Description  : Wrapper class for State
*/      
    public class states{
        public string stateName{get;set;}
        public List<Districts> discricts{get;set;}
    }
/*--------------------------------------------------------------------------------------------------------------------------
 * Created Date : 15/7/2022
 * Author       : Mohd Owais
 * Description  : Wrapper class for District
*/    
    public class districts{
        public string districtName{get;set;}
    }
}